# vi: set ft=ruby sw=4:

VAGRANT_BOX = "opensuse/openSUSE-Tumbleweed-Vagrant.x86_64"
VAGRANT_HOSTNAME = "opensuse"
CPU_CORES = 2
MEMORY = 4048
VRAM = 64

repo_root_host = `git rev-parse --show-toplevel`.tr("\n", "/")
repo_root_vm = "/opt/ground-control"

provision_playbook = "provision.yaml"
provision_playbook_skip_tags = ["kvm"]
provision_playbook_extra_vars= {}

if ENV.key?("GITHUB_USERNAME") && ENV.key?("GITHUB_TOKEN")
    provision_playbook_extra_vars = {
        github_username: ENV["GITHUB_USERNAME"],
        github_api_token: ENV["GITHUB_TOKEN"],
    }
else
    provision_playbook_skip_tags.push("github")
end

Vagrant.configure("2") do |config|
  config.vm.box = VAGRANT_BOX
  config.vm.hostname = VAGRANT_HOSTNAME

  config.vm.synced_folder repo_root_host, repo_root_vm

  config.vm.provider :virtualbox do |vbox|
    vbox.name = VAGRANT_HOSTNAME
    vbox.gui = false
    vbox.memory = MEMORY
    vbox.cpus = CPU_CORES
    vbox.customize ["modifyvm", :id, "--vram", VRAM]
    vbox.customize ["modifyvm", :id, "--accelerate3d", "on"]
    vbox.customize ['modifyvm', :id, '--clipboard', 'bidirectional']
  end

  config.vm.provision "shell", path: "./init.sh"

  config.vm.provision "ansible_local" do |ansible|
    ansible.playbook = provision_playbook
    ansible.provisioning_path = repo_root_vm + "/ansible"
    ansible.extra_vars = provision_playbook_extra_vars
    ansible.skip_tags = provision_playbook_skip_tags
  end

  # config.trigger.before :destroy do |trigger|
  #   trigger.info = "Running teardown playbook"
  #   trigger.run_remote = {
  #     inline: "sudo -u %s ansible-playbook %s -i %s/inventory $*" % [ANSIBLE_USER, ANSIBLE_PLAYBOOK_TEARDOWN, ansible_directory],
  #     args: ANSIBLE_ARGS
  #   }
  # end
end
