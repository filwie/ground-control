---
- name: gather os specific variables
  include_vars:
    file: '{{ "MacOSX.yaml" if ansible_distribution == "MacOSX" else "Linux.yaml" }}'

- name: make sure fontconfig and unzip are installed
  package:
    name: '{{ item }}'
    state: present
  become: '{{ fonts_become_to_install_packages }}'
  loop:
    - fontconfig
    - unzip

- name: create directory for fonts if it does not exist
  file:
    path: '{{ fonts_directory }}'
    state: directory

- name: download and unarchive fonts
  unarchive:
    src: '{{ item }}'
    dest: '{{ fonts_directory }}'
    remote_src: true
    creates: '{{ fonts_directory }}/Iosevka Nerd Font Complete.ttf'
  loop: '{{ fonts_download_urls }}'
  notify: update font cache
  register: fonts_download_result

- name: find files other than .ttf in fonts directory
  find:
    paths: '{{ fonts_directory }}'
    recurse: true
    excludes: '*.ttf,.uuid'
    file_type: any
  register: fonts_directory_not_ttf_result

- name: find Term and Windows font variants
  find:
    paths: '{{ fonts_directory }}'
    recurse: true
    patterns: '*Term*, *Windows*'
  register: fonts_directory_win_term_result

- name: remove found non-ttf, windows and term variants
  file:
    path: '{{ item.path }}'
    state: absent
  loop: '{{ fonts_directory_not_ttf_result.files | union(fonts_directory_win_term_result.files) }}'
  notify: update font cache

- name: configure displaying of fonts
  file:
    src: '/etc/fonts/conf.avail/{{ item }}'
    dest: '/etc/fonts/conf.d/{{ item }}'
    state: link
  become: true
  loop: '{{ fonts_fontconfig_enable_presets }}'
  when: link_font_configs | default(false)
